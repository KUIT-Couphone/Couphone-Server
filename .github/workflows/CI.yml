# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "feature/member" ]
  pull_request:
    branches: [ "feature/member" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: write CLOUDFRONT_DOMAIN
        run: echo "CLOUDFRONT_DOMAIN=${{secrets.CLOUDFRONT_DOMAIN}}" >> application.yml
        working-directory: ./src/main/resources
      - name: write DATASOURCE_PASSWORD_DEV
        run: echo "DATASOURCE_PASSWORD_DEV=${{secrets.DATASOURCE_PASSWORD_DEV}}" >> application.yml
        working-directory: ./src/main/resources

      - name: write DATASOURCE_URL_DEV
        run: echo "DATASOURCE_URL_DEV=${{secrets.DATASOURCE_URL_DEV}}" >> application.yml
        working-directory: ./src/main/resources

      - name: write DATASOURCE_USERNAME_DEV
        run: echo "DATASOURCE_USERNAME_DEV=${{secrets.DATASOURCE_USERNAME_DEV}}" >> application.yml
        working-directory: ./src/main/resources

      - name: write S3_ACCESS_KEY
        run: echo "S3_ACCESS_KEY=${{secrets.S3_ACCESS_KEY}}" >> application.yml
        working-directory: ./src/main/resources

      - name: write S3_SECRET_KEY
        run: echo "S3_SECRET_KEY=${{secrets.S3_SECRET_KEY}}" >> application.yml
        working-directory: ./src/main/resources

      - name: write JWT_SECRET_KEY
        run: echo "JWT_SECRET_KEY=${{secrets.JWT_SECRET_KEY}}" >> application.yml
        working-directory: ./src/main/resources

      - name: write JWT_EXPIRED_IN
        run: echo "JWT_EXPIRED_IN=${{secrets.JWT_EXPIRED_IN}}" >> application.yml
        working-directory: ./src/main/resources

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build